<section id="wasm-why" class="purple">
    <div class="w-100 mw-none ph3 mw8-m mw9-l center f3">
        <header>
            <h2>Why Rust?</h2>
            <div class="highlight"></div>
        </header>
        <div class="row">
            <div class="four columns">
                <div class="domain-icon">
                    <img src="/static/images/feather.svg" alt="A feather" />
                    <h3>Low footprint</h3>
                </div>
                <p>
                    Take control over resource usage to keep memory and CPU footprint to a minimum.
                    Get help from the compiler to make sure you’ve got it right.
                    And do this with an ecosystem that is productive and pleasant to use.
                </p>
            </div>
            <div class="four columns">
                <div class="domain-icon">
                    <img src="/static/images/secure-shield.svg" alt="A shield" />
                    <h3>Secure and reliable</h3>
                </div>
                <p>
                    Rust’s powerful type checker prevents whole classes of bugs.
                    Make sure you know exactly when and where state is shared and mutated.
                    Get help catching points of failure &mdash; before deployment.
                </p>
            </div>
            <div class="four columns">
                <div class="domain-icon">
                    <img src="/static/images/gears-network.svg" alt="Connected gears" />
                    <h3>Concurrent at scale</h3>
                </div>
                <p>
                    Use any mixture of concurrency approaches that works for you.
                    Rust will make sure you don’t accidentally share state between threads or tasks.
                    It empowers you to squeeze every last bit of scaling, fearlessly.
                </p>
            </div>
        </div>
    </div>
</section>